@model iiifly.Models.ImageSetWrapper

@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Image Set | " + Model.ImageSet.Label + " | " + Model.ImageSet.Id;
}


    @if (Model == null || !Model.Images.Any())
    {
        <div class="jumbotron">
            <p>No image set found at that path.</p>
        </div>
    }
    else if (Model.IsFinished())
    {
        <div class="jumbotron">
            <h3>@Model.ImageSet.Label</h3>
            <p>@Model.ImageSet.Description</p>
            
            @if (Model.Images.Count == 1)
            {
                // render OSD
                <div id="osd" class="openseadragon" style="width: 100%; height: 500px;"></div>

                <script type="text/javascript" src="/Scripts/openseadragon/openseadragon.js"></script>
                <script>
                    var viewer1 = OpenSeadragon({
                        id: "osd",
                        prefixUrl: "/Scripts/openseadragon/images/",
                        tileSources: "@Model.Images[0].InfoJson" + ".info.json",
                        showNavigator: true
                    });
                </script>
            }
            else if (Model.Images.Count > 1)
            {
                // render UV
                <div class="uv" data-uri="@Model.ProxyManifest" style="width: 100%; height: 700px; background-color: #000"></div>
                <script type="text/javascript" id="embedUV" src="/Scripts/uv-1.6.14/lib/embed.js"></script>
            }
            else
            {
                <p class="has-error">There are no images in this set.</p>
            }
        </div>
        <div class="row">
            <p>
                <i>IIIF-ified by <a href="/display/imageset/@Model.UserPublicPath">@Model.UserDisplay</a></i>
                <br/>
                <a class="drgndrp" href="@Model.ProxyManifest?manifest=@Model.ProxyManifest">
                    IIIF Manifest
                    <img width="18" src="/Content/logo-iiif-34x30.png" style="vertical-align: top"/>
                </a>
            </p>
        </div>
    }
    else
    {
        // render status of images
        <div class="row">
            <h3>Your images are still processing...</h3>
            <table class="table">
                <tr>
                    <th></th>
                    <th>Name</th>
                    <th>Queued</th>
                    <th>Dequeued</th>
                    <th>Finished</th>
                </tr>

                @foreach (var image in Model.Images)
                {
                    <tr>
                        <td>
                            @if (image.Finished.HasValue)
                            {
                                <img src="@image.Thumbnail400"/>
                            }
                        </td>
                        <td>@image.ModelId</td>
                        <td>@image.Queued</td>
                        <td>@image.Dequeued</td>
                        <td>@image.Finished</td>
                    </tr>
                }

            </table>
        </div>
    }



@if (Model != null && Model.Images.Any() &&
        (Model.ImageSet.ApplicationUserId == User.Identity.GetUserId() || User.IsInRole("canApproveUsers")))
{
    using (Html.BeginForm("UpdateImageSet", "Display", FormMethod.Post, new {role = "form"}))
    {


        <div class="form-group">
            @Html.HiddenFor(m => m.ImageSet.Id)
            @Html.HiddenFor(m => m.UserPublicPath)
            <h4>Update label and description</h4>
            @Html.TextBoxFor(m => m.ImageSet.Label, new {@class = "form-control"})
            <br/>
            @Html.TextAreaFor(m => m.ImageSet.Description, new {@class = "form-control"})
            <br/>
            <input type="submit" value="Save"/>
        </div>
    }
}


@section scripts {

}
